{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/anasaldana/Desktop/CS148/project-t05-recipefinder/RecipeFinderApp/tabs/IngredientsTab.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useEffect } from 'react';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport ListItem from \"../components/ListItem\";\nimport AddIngredient from \"../components/AddIngredient\";\n\nvar IngredientsTab = function IngredientsTab(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      pantryIngredients = _useState2[0],\n      setPantryIngredients = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filterData = _useState4[0],\n      setfilterData = _useState4[1];\n\n  var ingredientsQuery = '';\n  var apiURL = '';\n  var ready = false;\n\n  var deleteItem = function deleteItem(id) {\n    setPantryIngredients(function (prevPantryIngredients) {\n      return prevPantryIngredients.filter(function (item) {\n        return item.id !== id;\n      });\n    });\n  };\n\n  useEffect(function () {\n    getPantryIngredientsFromUserDevice();\n  }, []);\n  useEffect(function () {\n    savePantryIngredientsToUserDevice(pantryIngredients);\n  }, [pantryIngredients]);\n\n  var savePantryIngredientsToUserDevice = function savePantryIngredientsToUserDevice(todos) {\n    var stringifyPantryIngredients;\n    return _regeneratorRuntime.async(function savePantryIngredientsToUserDevice$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            stringifyPantryIngredients = JSON.stringify(pantryIngredients);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('pantryIngredients', stringifyPantryIngredients));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var getPantryIngredientsFromUserDevice = function getPantryIngredientsFromUserDevice() {\n    var _pantryIngredients;\n\n    return _regeneratorRuntime.async(function getPantryIngredientsFromUserDevice$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('pantryIngredients'));\n\n          case 3:\n            _pantryIngredients = _context2.sent;\n\n            if (_pantryIngredients != null) {\n              setPantryIngredients(JSON.parse(_pantryIngredients));\n            }\n\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var addPantryIngredient = function addPantryIngredient(text) {\n    if (text == '') {\n      Alert.alert('No item entered', 'Please enter an ingredient when adding to your pantry list');\n    } else {\n      setPantryIngredients(function (prevPantryIngredients) {\n        return [{\n          id: Math.random(),\n          ingredient: text\n        }].concat(_toConsumableArray(prevPantryIngredients));\n      });\n    }\n  };\n\n  var searchPantryIngredient = function searchPantryIngredient() {\n    var i;\n    return _regeneratorRuntime.async(function searchPantryIngredient$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            ingredientsQuery = '';\n\n            for (i = 0; i < pantryIngredients.length; i++) {\n              if (i == pantryIngredients.length - 1) {\n                ingredientsQuery += pantryIngredients[i].ingredient;\n              } else {\n                ingredientsQuery += pantryIngredients[i].ingredient + \",\";\n              }\n            }\n\n            fetchPost(ingredientsQuery);\n            console.log(ingredientsQuery);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var fetchPost = function fetchPost(ingredientsQuery) {\n    return _regeneratorRuntime.async(function fetchPost$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            apiURL = 'https://jsonplaceholder.typicode.com/photos';\n            console.log(apiURL);\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(fetch(apiURL).then(function (response) {\n              return response.json();\n            }).then(function (responseJson) {\n              console.log(responseJson);\n              setfilterData(responseJson);\n            }).catch(function (error) {\n              console.error(error);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: pantryIngredients,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(ListItem, {\n        item: item,\n        deleteItem: deleteItem,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 33\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), React.createElement(AddIngredient, {\n    addPantryIngredient: addPantryIngredient,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.btn,\n    onPress: function onPress() {\n      searchPantryIngredient();\n      navigation.navigate('Recipes', filterData);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.btnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"search\",\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }), \" Search By Ingredients\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  text: {\n    fontSize: 18\n  },\n  btn: {\n    backgroundColor: '#c2bad8',\n    padding: 9,\n    margin: 5\n  },\n  btnText: {\n    color: 'darkslateblue',\n    fontSize: 20,\n    textAlign: 'center'\n  }\n});\nexport default IngredientsTab;","map":{"version":3,"sources":["/Users/anasaldana/Desktop/CS148/project-t05-recipefinder/RecipeFinderApp/tabs/IngredientsTab.js"],"names":["React","useState","AsyncStorage","useEffect","Icon","ListItem","AddIngredient","IngredientsTab","navigation","pantryIngredients","setPantryIngredients","filterData","setfilterData","ingredientsQuery","apiURL","ready","deleteItem","id","prevPantryIngredients","filter","item","getPantryIngredientsFromUserDevice","savePantryIngredientsToUserDevice","todos","stringifyPantryIngredients","JSON","stringify","setItem","console","log","getItem","parse","addPantryIngredient","text","Alert","alert","Math","random","ingredient","searchPantryIngredient","i","length","fetchPost","fetch","then","response","json","responseJson","catch","error","styles","container","index","toString","btn","navigate","btnText","StyleSheet","create","flex","fontSize","backgroundColor","padding","margin","color","textAlign"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {View, StyleSheet, FlatList, Alert, InteractionManager, Text, TouchableOpacity} from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useEffect } from 'react';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\n\n\nimport ListItem from '../components/ListItem';\nimport AddIngredient from '../components/AddIngredient';\n\n\nconst IngredientsTab = ({navigation}) => {\n  const [pantryIngredients, setPantryIngredients] = useState([]);\n  const [filterData, setfilterData] = useState([]);\n  let ingredientsQuery = '';\n  let apiURL = '';\n  let ready = false;\n  \n  const deleteItem = id => {\n    setPantryIngredients(prevPantryIngredients => {\n      return prevPantryIngredients.filter(item => item.id !== id);\n    });\n  };\n\n  useEffect(() =>{\n    getPantryIngredientsFromUserDevice();\n  }, []);\n\n  useEffect(() => {\n    savePantryIngredientsToUserDevice(pantryIngredients);\n  }, [pantryIngredients]);\n\n  const savePantryIngredientsToUserDevice = async todos => {\n    try {\n      const stringifyPantryIngredients = JSON.stringify(pantryIngredients);\n      await AsyncStorage.setItem('pantryIngredients', stringifyPantryIngredients);\n    } catch (error){\n      console.log(error);\n    }\n  };\n\n  const getPantryIngredientsFromUserDevice = async () => {\n    try {\n      const pantryIngredients = await AsyncStorage.getItem('pantryIngredients');\n      if(pantryIngredients != null){\n        setPantryIngredients(JSON.parse(pantryIngredients))\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  const addPantryIngredient = text => {\n    if (text == '') {\n      Alert.alert(\n        'No item entered',\n        'Please enter an ingredient when adding to your pantry list',\n      );\n    } else {\n      setPantryIngredients(prevPantryIngredients => {\n        return [{id: Math.random(), ingredient: text}, ...prevPantryIngredients];\n      });\n    }\n  };\n\n  const searchPantryIngredient = async() => {\n    ingredientsQuery = '';\n    for(var i=0; i < pantryIngredients.length; i++){\n      if(i == pantryIngredients.length-1){\n      ingredientsQuery += pantryIngredients[i].ingredient;\n      }else{\n        ingredientsQuery += pantryIngredients[i].ingredient + \",\";\n      }\n    }\n    fetchPost(ingredientsQuery);\n    console.log(ingredientsQuery);\n  }\n\n  const fetchPost = async (ingredientsQuery) =>{\n    //apiURL = 'http://localhost:19002/api/recipes/?ingredients=' + ingredientsQuery;\n    apiURL = 'https://jsonplaceholder.typicode.com/photos';\n    console.log(apiURL)\n    await fetch(apiURL)\n\n    .then((response) => response.json())\n    .then((responseJson) => {\n        console.log(responseJson)\n      setfilterData(responseJson);\n    }).catch((error) => {\n      console.error(error);\n    })\n  }\n\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={pantryIngredients}\n        renderItem={({item}) => <ListItem item={item} deleteItem={deleteItem}\n          />}\n        keyExtractor={(item, index) => index.toString()}\n      />\n      <AddIngredient addPantryIngredient={addPantryIngredient} />\n      <View>\n      <TouchableOpacity\n        style={styles.btn}\n        onPress={() => {\n            searchPantryIngredient();\n            \n             navigation.navigate('Recipes', filterData)\n            \n          \n          }}\n        >\n        <Text style={styles.btnText}>\n          <Icon name=\"search\" size={20} /> Search By Ingredients\n        </Text>\n      </TouchableOpacity>\n    </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  text:{\n    fontSize: 18,\n  },\n  btn: {\n    backgroundColor: '#c2bad8',\n    padding: 9,\n    margin: 5,\n  },\n  btnText: {\n    color: 'darkslateblue',\n    fontSize: 20,\n    textAlign: 'center',\n  },\n\n});\n\nexport default IngredientsTab;\n"]},"metadata":{},"sourceType":"module"}