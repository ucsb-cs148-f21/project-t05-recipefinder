{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/anasaldana/Desktop/CS 148/project-t05-recipefinder/RecipeFinderApp/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport IngredientsTab from \"../RecipeFinderApp/tabs/IngredientsTab\";\nimport RecipeTab from \"../RecipeFinderApp/tabs/RecipeTab\";\nvar BottomTabs = createBottomTabNavigator();\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, React.createElement(BottomTabs.Navigator, {\n        screenOptions: function screenOptions(_ref) {\n          var route = _ref.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var focused = _ref2.focused,\n                  color = _ref2.color,\n                  size = _ref2.size;\n              var iconName;\n\n              if (route.name === 'Ingredients') {\n                iconName = focused ? 'ios-nutrition' : 'ios-nutrition-outline';\n              } else if (route.name === 'Recipes') {\n                iconName = focused ? 'ios-book' : 'ios-book-outline';\n              }\n\n              return React.createElement(Ionicons, {\n                name: iconName,\n                size: size,\n                color: color,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 27,\n                  columnNumber: 23\n                }\n              });\n            }\n          };\n        },\n        tabBarOption: {\n          activeTintColor: 'tomato',\n          inactiveTintColor: 'gray'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }, React.createElement(BottomTabs.Screen, {\n        name: \"Ingredients\",\n        component: IngredientsTab,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }), React.createElement(BottomTabs.Screen, {\n        name: \"Recipes\",\n        component: RecipeTab,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/anasaldana/Desktop/CS 148/project-t05-recipefinder/RecipeFinderApp/App.js"],"names":["React","Component","NavigationContainer","Ionicons","createBottomTabNavigator","IngredientsTab","RecipeTab","BottomTabs","App","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,QAAP;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AAEA,OAAOC,cAAP;AACA,OAAOC,SAAP;AAEA,IAAMC,UAAU,GAAGH,wBAAwB,EAA3C;;IAEqBI,G;;;;;;;;;;;;;WACnB,kBAAS;AAAA;;AACP,aACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD,CAAY,SAAZ;AACE,QAAA,aAAa,EAAE;AAAA,cAAGC,KAAH,QAAGA,KAAH;AAAA,iBAAgB;AAC7BC,YAAAA,UAAU,EAAE,2BAA8B;AAAA,kBAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,kBAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,kBAAXC,IAAW,SAAXA,IAAW;AACxC,kBAAIC,QAAJ;;AAEA,kBAAGL,KAAK,CAACM,IAAN,KAAe,aAAlB,EAAiC;AAC/BD,gBAAAA,QAAQ,GAAGH,OAAO,GACf,eADe,GAEf,uBAFH;AAGD,eAJD,MAIM,IAAGF,KAAK,CAACM,IAAN,KAAe,SAAlB,EAA6B;AACjCD,gBAAAA,QAAQ,GAAGH,OAAO,GAAG,UAAH,GAAgB,kBAAlC;AACD;;AACD,qBAAQ,oBAAC,QAAD;AAAU,gBAAA,IAAI,EAAEG,QAAhB;AAA0B,gBAAA,IAAI,EAAED,IAAhC;AAAsC,gBAAA,KAAK,EAAED,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAR;AACD;AAZ4B,WAAhB;AAAA,SADjB;AAeE,QAAA,YAAY,EAAE;AACZI,UAAAA,eAAe,EAAE,QADL;AAEZC,UAAAA,iBAAiB,EAAE;AAFP,SAfhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAoBE,oBAAC,UAAD,CAAY,MAAZ;AAAmB,QAAA,IAAI,EAAC,aAAxB;AAAsC,QAAA,SAAS,EAAEZ,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBF,EAqBE,oBAAC,UAAD,CAAY,MAAZ;AAAmB,QAAA,IAAI,EAAC,SAAxB;AAAkC,QAAA,SAAS,EAAEC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBF,CADF,CADF;AA2BD;;;;EA7B8BL,S;;SAAZO,G","sourcesContent":["import React, { Component } from 'react';\nimport { NavigationContainer } from '@react-navigation/native'\nimport Ionicons from 'react-native-vector-icons/Ionicons'\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\n\nimport IngredientsTab from '../RecipeFinderApp/tabs/IngredientsTab'\nimport RecipeTab from '../RecipeFinderApp/tabs/RecipeTab'\n\nconst BottomTabs = createBottomTabNavigator();\n\nexport default class App extends Component {\n  render() {\n    return (\n      <NavigationContainer>\n        <BottomTabs.Navigator\n          screenOptions={({ route }) => ({\n            tabBarIcon: ({ focused, color, size }) => {\n              let iconName;\n\n              if(route.name === 'Ingredients') {\n                iconName = focused \n                 ? 'ios-nutrition' \n                 : 'ios-nutrition-outline';\n              }else if(route.name === 'Recipes') {\n                iconName = focused ? 'ios-book' : 'ios-book-outline';\n              }\n              return  <Ionicons name={iconName} size={size} color={color} />\n            },\n          })}\n          tabBarOption={{\n            activeTintColor: 'tomato',\n            inactiveTintColor: 'gray',\n          }}\n            >\n          <BottomTabs.Screen name=\"Ingredients\" component={IngredientsTab} />\n          <BottomTabs.Screen name=\"Recipes\" component={RecipeTab} />\n        </BottomTabs.Navigator>\n      </NavigationContainer>\n    );\n  }\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}