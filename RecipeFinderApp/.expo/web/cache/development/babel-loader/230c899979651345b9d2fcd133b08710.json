{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/royce/Desktop/project-t05-recipefinder/RecipeFinderApp/App.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\n\nvar App = function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      filterData = _useState2[0],\n      setfilterData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      masterData = _useState4[0],\n      setmasterData = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      search = _useState6[0],\n      setsearch = _useState6[1];\n\n  useEffect(function () {\n    fetchPost();\n    return function () {};\n  }, []);\n\n  var fetchPost = function fetchPost() {\n    var apiURL = 'https://jsonplaceholder.typicode.com/posts';\n    fetch(apiURL).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setfilterData(responseJson);\n      setmasterData(responseJson);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var searchFilter = function searchFilter(text) {\n    if (text) {\n      var newData = masterData.filter(function (item) {\n        var itemData = item.body ? item.body.toUpperCase() : ''.toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setfilterData(newData);\n      setsearch(text);\n    } else {\n      setfilterData(masterData);\n      setsearch(text);\n    }\n  };\n\n  var ItemView = function ItemView(_ref) {\n    var item = _ref.item;\n    return React.createElement(Text, {\n      styles: styles.itemStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, item.id, '.', item.title.toUpperCase());\n  };\n\n  var ItemSeparatorView = function ItemSeparatorView() {\n    return React.createElement(View, {\n      style: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#c8c8c8'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInputStyle,\n    value: search,\n    placeholder: \"Search Here\",\n    underlineColorAndroid: \"transparent\",\n    onChangeText: function onChangeText(text) {\n      return searchFilter(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), React.createElement(FlatList, {\n    data: filterData,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    ItemSeparatorComponent: ItemSeparatorView,\n    renderItem: ItemView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white'\n  },\n  itemStyle: {\n    padding: 15\n  },\n  textInputStyle: {\n    height: 60,\n    borderWidth: 1,\n    paddingLeft: 20,\n    margin: 5,\n    borderColor: '#009688',\n    backgroundColor: 'white'\n  }\n});\nexport default App;","map":{"version":3,"sources":["/Users/royce/Desktop/project-t05-recipefinder/RecipeFinderApp/App.js"],"names":["React","useState","useEffect","App","filterData","setfilterData","masterData","setmasterData","search","setsearch","fetchPost","apiURL","fetch","then","response","json","responseJson","catch","error","console","searchFilter","text","newData","filter","item","itemData","body","toUpperCase","textData","indexOf","ItemView","styles","itemStyle","id","title","ItemSeparatorView","height","width","backgroundColor","flex","container","textInputStyle","index","toString","StyleSheet","create","padding","borderWidth","paddingLeft","margin","borderColor"],"mappings":"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","sourcesContent":["//import { StatusBar } from 'expo-status-bar';\nimport React, {useState, useEffect} from 'react';\nimport { StyleSheet, Text, View , TextInput, SafeAreaView, FlatList, ActivityIndicator} from 'react-native';\n\nconst App = ()=> {\n  const [filterData, setfilterData] = useState([]);\n  const [masterData, setmasterData] = useState([]);\n  const [search, setsearch] = useState('');\n\n  useEffect(() =>{\n    fetchPost();\n    return() => {\n\n    }\n  }, [])\n\n\n  const fetchPost = () =>{\n    const apiURL = 'https://jsonplaceholder.typicode.com/posts';\n    fetch(apiURL)\n    .then((response) => response.json())\n    .then((responseJson) => {\n      setfilterData(responseJson);\n      setmasterData(responseJson);\n    }).catch((error) => {\n      console.error(error);\n    })\n  }\n\n  const searchFilter = (text) => {\n    if (text) {\n      const newData = masterData.filter((item) =>{\n        const itemData = item.body ? item.body.toUpperCase() : ''.toUpperCase();\n        const textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      })\n      setfilterData(newData);\n      setsearch(text);\n    } else{\n      setfilterData(masterData);\n      setsearch(text);\n    }\n  }\n\n  const ItemView = ({item}) => {\n    return (\n      <Text styles={styles.itemStyle}>\n        {item.id}{'.'}{item.title.toUpperCase()}\n      </Text>\n    )\n  }\n\n  const ItemSeparatorView = () =>{\n    return (\n      <View\n        style={{height: 0.5, width: '100%', backgroundColor: '#c8c8c8'}}\n      />\n    )\n  }\n\n  return (\n    <SafeAreaView style={{flex: 1}}>\n      <View style={styles.container}>\n        <TextInput\n          style={styles.textInputStyle}\n          value={search}\n          placeholder= \"Search Here\"\n          underlineColorAndroid=\"transparent\"\n          onChangeText={(text) => searchFilter(text)}\n        />\n        <FlatList\n          data={filterData}\n          keyExtractor={(item,index) => index.toString()}\n          ItemSeparatorComponent={ItemSeparatorView}\n          renderItem={ItemView}\n        />\n      </View>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n  },\n  itemStyle: {\n    padding: 15\n  },\n  textInputStyle:{\n    height: 60,\n    borderWidth: 1,\n    paddingLeft: 20,\n    margin: 5,\n    borderColor: '#009688',\n    backgroundColor: 'white'\n\n  }\n});\n\nexport default App;\n "]},"metadata":{},"sourceType":"module"}